(define-module (nabs targets)
               :use-module (nabs invoke)
               :use-module (ice-9 vlist)
               :use-module (ice-9 rdelim)
               :use-module (ice-9 regex)
               :use-module (rnrs io ports)
               :use-module (gnu make)
               )

(define (split-targets-and-prereqs line)
  (let* ((targets-and-prereqs (string-split line #\:))
         (targets (string-tokenize (car targets-and-prereqs)))
         (prereqs (string-tokenize (cadr targets-and-prereqs))))
    (list targets prereqs)))

(define (find-all-rules-in lines)
  (let* ((re (make-regexp "^([^#.% \t][^%:= ]+ *)+:([^:=]|$)")))
    (map split-targets-and-prereqs (filter (lambda (l) (regexp-exec re l)) lines))))

(define-public (find-all-rules makefile...)
  (if (null? makefile...)
    '()
    (append (find-all-rules-in (car makefile...))
            (find-all-rules (cdr makefile...)))))

(define-public (make-table all-rules... op)
 (define (fill-with-prereqs prereqs... table)
   (cond ((null? prereqs...) table)
         ((vhash-assoc (car prereqs...) table)
          (fill-with-prereqs (cdr prereqs...) table))
         (#t (fill-with-prereqs (cdr prereqs...)
                                (vhash-cons (car prereqs...) #t table)))))
 (define (fill-with-all-prereqs rules... table)
   (if (null? rules...)
     table
     (fill-with-all-prereqs (cdr rules...)
                            (fill-with-prereqs (op rules...) table))))
 (let* ((table vlist-null))
   (fill-with-all-prereqs all-rules... table)))

(define-public (make-prereqs-table all-rules...)
  (make-table all-rules... cadar))

(define-public (make-targets-table all-rules...)
  (make-table all-rules... caar))

(define-public (top-level-targets)
  (let* ((dont-run (gmk-expand "$(NABS_HELP_DONT_RECURSE)"))
         (makefiles (gmk-expand "$(MAKEFILE_LIST)"))
         (rules (if (not (equal? dont-run ""))
                  '((() ()))
                  (find-all-rules-in (command-output (gmk-expand "$(MAKE) -q -p -n -s $(MAKEFILE_LIST) NABS_HELP_DONT_RECURSE='#t'") ""))))
         (ttab (make-targets-table rules))
         (ptab (make-prereqs-table rules)))
    (filter (lambda (x) (not (string-contains makefiles x)))
            (append (cadar rules)
                    (vhash-fold (lambda (k v r) (if (vhash-assoc k ptab) r (cons k r)))
                                '()
                                ttab)))))
